<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Roman Ganchenko]]></title>
  <link href="http://ganchenkor.github.io/atom.xml" rel="self"/>
  <link href="http://ganchenkor.github.io/"/>
  <updated>2014-07-28T15:36:35-07:00</updated>
  <id>http://ganchenkor.github.io/</id>
  <author>
    <name><![CDATA[Roman Ganchenko]]></name>
    <email><![CDATA[romanganchenko@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cordova Hook to Install Plugins]]></title>
    <link href="http://ganchenkor.github.io/blog/2014/07/26/cordova-hook-to-install-plugins/"/>
    <updated>2014-07-26T19:13:14-07:00</updated>
    <id>http://ganchenkor.github.io/blog/2014/07/26/cordova-hook-to-install-plugins</id>
    <content type="html"><![CDATA[<p>Are you cordova/phonegap developer?<br/>
Have you ever used hooks in your <code>./hooks/</code> folder?<br/>
If your answer is &ldquo;NO&rdquo;, I encourage you to take a look at: <code>./hooks/README.md</code> in your cordova project
(older version has it in different location)<br/>
I came across this <a href="http://devgirl.org/2013/11/12/three-hooks-your-cordovaphonegap-project-needs/">post</a> and really liked the idea of preinstalling cordova plugins before building the project.<br/>
I believe that you should always need to avoid commiting any code from <code>./platforms</code> or <code>./plugins</code> to source repository in any cordova projects.</p>

<p>Here is my improved version of the code from <a href="http://devgirl.org">http://devgirl.org</a></p>

<figure class='code'><figcaption><span>Cordova Hook</span><a href='https://gist.github.com/ganchenkor/b5453e12641edb9f5fc4'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span><span class="o">!</span><span class="err">/usr/bin/env node</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">exec</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;child-process-promise&#39;</span><span class="p">).</span><span class="nx">exec</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;path&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">sys</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;sys&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">cordova</span>  <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;cordova&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">pluginlist</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;de.appplant.cordova.plugin.email-composer&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;org.apache.cordova.globalization&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;org.apache.cordova.contacts&quot;</span>
</span><span class='line'><span class="p">].</span><span class="nx">sort</span><span class="p">(</span><span class="nx">sortArray</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">pluginPath</span> <span class="o">=</span> <span class="nx">cordova</span><span class="p">.</span><span class="nx">findProjectRoot</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot;/plugins&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">installedPlugins</span> <span class="o">=</span> <span class="nx">findPlugins</span><span class="p">(</span><span class="nx">pluginPath</span><span class="p">).</span><span class="nx">sort</span><span class="p">(</span><span class="nx">sortArray</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nx">arraysIdentical</span><span class="p">(</span><span class="nx">installedPlugins</span><span class="p">,</span> <span class="nx">pluginlist</span><span class="p">)){</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">pluginlist</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span>  <span class="p">(</span><span class="nx">plug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;cordova plugin add &quot;</span> <span class="o">+</span> <span class="nx">plug</span><span class="p">,</span> <span class="nx">puts</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">puts</span><span class="p">(</span><span class="nx">error</span><span class="p">,</span><span class="nx">stdout</span><span class="p">,</span><span class="nx">stderr</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">sys</span><span class="p">.</span><span class="nx">puts</span><span class="p">(</span><span class="nx">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">arraysIdentical</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">!=</span> <span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">!==</span> <span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">findPlugins</span><span class="p">(</span><span class="nx">pluginPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">plugins</span> <span class="o">=</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nx">stats</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">fs</span><span class="p">.</span><span class="nx">existsSync</span><span class="p">(</span><span class="nx">pluginPath</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">plugins</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readdirSync</span><span class="p">(</span><span class="nx">pluginPath</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">fileName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">stats</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">statSync</span><span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">pluginPath</span><span class="p">,</span> <span class="nx">fileName</span><span class="p">));</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">fileName</span> <span class="o">!=</span> <span class="s1">&#39;.svn&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">fileName</span> <span class="o">!=</span> <span class="s1">&#39;CVS&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">stats</span><span class="p">.</span><span class="nx">isDirectory</span><span class="p">();</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">plugins</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">sortArray</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">va</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span> <span class="o">+</span> <span class="nx">a</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">vb</span> <span class="o">=</span> <span class="p">(</span><span class="nx">b</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">va</span> <span class="o">&gt;</span> <span class="nx">vb</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="p">(</span> <span class="nx">va</span> <span class="o">===</span> <span class="nx">vb</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
